<div class="chat-header">
  <div class="left-header">
    <div class="header-title">
      <%= @room.name %>
    </div>
  </div>
  <div class="right-header">
    <div class="header-button">
      <%=link_to "チャットを終了する", room_path(@room), method: :delete %>
      <%#rails routesを実行すると、削除のパスはroom_pathとなります。
削除するチャットルームを区別するために、定義している@roomを引数にし、room_path(@room)と指定しましょう。
HTTPメソッドのdeleteを指定すると、roomsコントローラーのdestroyアクションが実行されます。%>
    </div>
  </div>
</div>

<div class="messages">
  <%=render partial: 'message',collection: @messages %>
</div>


<%= form_with model: [@room,@message], html:{class: "form"}, local: true do |f| %> <%#今回のコードでは、form_withの引数に@room, @messageの2つを渡している点に注意してください。
これは、messagesのルーティングがroomsにネストされているためです。チャットルームとメッセージとの間には、あるチャットルームに属しているメッセージ、という親子関係があります。
記述したform_withの第1引数@roomには「指定のチャットルームのレコード情報」、第2引数@messageには「Messageモデルのからのインスタンス（Message.new）」をあらかじめセットしておく必要があります。次に、これらの変数をコントローラーのindexアクションで定義しましょう。%> 
  <div class="form-input">
   <%= f.text_field :content, class: 'form-message', placeholder: 'type a message'%>
    <label class="form-image">
      <span class="image-title">画像</span>
      <%= f.file_field :image, class: 'hidden'%>
    </label>
  </div>  
  <%= f.submit '送信', class: 'form-submit' %>
<%end%>